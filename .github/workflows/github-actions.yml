name: Node.js CI

on:
  workflow_dispatch:
  release:
    types: [ published, prereleased, released ]
  push:
    branches: [ $default-branch ]
  pull_request:
    branches: [ $default-branch ]

jobs:

  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - run: npm ci
      - run: npm run build --if-present
      - uses: actions/upload-artifact@v3
        with:
          name: dist
          path: dist

  publish:
    needs: build
    if: ${{ github.ref_name == github.event.repository.default_branch || github.event.release.action == 'prereleased' || github.event.release == 'released' }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: dist
          path: dist
      - run: npm ci
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            docker.io/cbush06/patient-portal
          tags: |
            type=raw,value=latest,enable={{ is_default_branch }}
            type=semver,pattern={{raw}},suffix=-RC,enable=${{ github.event.release.prereleased }}
            type=semver,pattern={{raw}},enable=${{ github.event.release.released }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
